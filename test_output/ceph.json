[
    {
        "name": "Threads",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Threads REQUIRED)",
            "find_package(Threads)",
            "find_package(Threads ${_Boost_find_quiet})",
            "find_package(Threads QUIET)",
            "FIND_PACKAGE(Threads)"
        ]
    },
    {
        "name": [
            "rt"
        ],
        "type": "find_library",
        "reachability": "['HAVE_POSIX_TIMERS']",
        "code": [
            "find_library(RT_LIBRARY NAMES rt)"
        ]
    },
    {
        "name": "verbs",
        "type": "find_package",
        "reachability": "['DPDK_rte_${c}_LIBRARY', 'NOT TARGET ${dpdk_lib}', 'c STREQUAL pmd_mlx5'] OR ['WITH_RDMA']",
        "code": [
            "find_package(verbs QUIET)",
            "find_package(verbs REQUIRED)"
        ]
    },
    {
        "name": "rdmacm",
        "type": "find_package",
        "reachability": "['WITH_RDMA']",
        "code": [
            "find_package(rdmacm REQUIRED)"
        ]
    },
    {
        "name": "Backtrace",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Backtrace)"
        ]
    },
    {
        "name": "udev",
        "type": "find_package",
        "reachability": "['LINUX']",
        "code": [
            "find_package(udev REQUIRED)"
        ]
    },
    {
        "name": "blkid",
        "type": "find_package",
        "reachability": "['LINUX']",
        "code": [
            "find_package(blkid REQUIRED)"
        ]
    },
    {
        "name": "keyutils",
        "type": "find_package",
        "reachability": "['LINUX'] OR ['LINUX', 'WITH_LIBCEPHFS OR WITH_KRBD']",
        "code": [
            "find_package(keyutils REQUIRED)"
        ]
    },
    {
        "name": "OpenLDAP",
        "type": "find_package",
        "reachability": "['WITH_OPENLDAP']",
        "code": [
            "find_package(OpenLDAP REQUIRED)"
        ]
    },
    {
        "name": "GSSApi",
        "type": "find_package",
        "reachability": "['WITH_GSSAPI']",
        "code": [
            "find_package(GSSApi REQUIRED)"
        ]
    },
    {
        "name": "FUSE",
        "type": "find_package",
        "reachability": "['WITH_FUSE']",
        "code": [
            "find_package(FUSE REQUIRED)"
        ]
    },
    {
        "name": "xfs",
        "type": "find_package",
        "reachability": "['WITH_XFS']",
        "code": [
            "find_package(xfs)"
        ]
    },
    {
        "name": "aio",
        "type": "find_package",
        "reachability": "['WITH_SPDK', 'LINUX'] OR ['WITH_BLUESTORE', 'LINUX']",
        "code": [
            "find_package(aio)",
            "find_package(aio REQUIRED)"
        ]
    },
    {
        "name": "libcryptsetup",
        "type": "find_package",
        "reachability": "['WITH_RBD AND LINUX']",
        "code": [
            "find_package(libcryptsetup 2.0.5 REQUIRED)"
        ]
    },
    {
        "name": "uring",
        "type": "find_package",
        "reachability": "['WITH_LIBURING', 'WITH_SYSTEM_LIBURING']",
        "code": [
            "find_package(uring REQUIRED)"
        ]
    },
    {
        "name": "dml",
        "type": "find_package",
        "reachability": "['WITH_BLUESTORE_PMEM']",
        "code": [
            "find_package(dml)"
        ]
    },
    {
        "name": "CUnit",
        "type": "find_package",
        "reachability": "['WITH_SPDK']",
        "code": [
            "find_package(CUnit REQUIRED)"
        ]
    },
    {
        "name": "uuid",
        "type": "find_package",
        "reachability": "['WITH_SPDK', 'LINUX']",
        "code": [
            "find_package(uuid REQUIRED)"
        ]
    },
    {
        "name": "QatDrv",
        "type": "find_package",
        "reachability": "['WITH_QATDRV']",
        "code": [
            "find_package(QatDrv REQUIRED COMPONENTS qat_s usdm_drv_s)"
        ]
    },
    {
        "name": "QAT",
        "type": "find_package",
        "reachability": "['NOT (WITH_QATDRV)', 'WITH_QATLIB']",
        "code": [
            "find_package(QAT REQUIRED)"
        ]
    },
    {
        "name": "QATzip",
        "type": "find_package",
        "reachability": "['WITH_QATZIP']",
        "code": [
            "find_package(QATzip REQUIRED)"
        ]
    },
    {
        "name": "SQLite3",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_DBSTORE', 'USE_SQLITE'] OR ['WITH_LIBCEPHSQLITE']",
        "code": [
            "find_package(SQLite3 REQUIRED)"
        ]
    },
    {
        "name": "snappy",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(snappy REQUIRED)"
        ]
    },
    {
        "name": "LZ4",
        "type": "find_package",
        "reachability": "['WITH_LZ4']",
        "code": [
            "find_package(LZ4 1.7 REQUIRED)"
        ]
    },
    {
        "name": "gperftools",
        "type": "find_package",
        "reachability": "['NOT (ALLOCATOR)', 'ALLOCATOR'] OR ['ALLOCATOR', '${ALLOCATOR} MATCHES \"tcmalloc(_minimal)?\"'] OR ['WITH_PROFILER']",
        "code": [
            "find_package(gperftools 2.6.2)",
            "find_package(gperftools 2.6.2 REQUIRED profiler)",
            "find_package(gperftools 2.6.2 REQUIRED)"
        ]
    },
    {
        "name": "JeMalloc",
        "type": "find_package",
        "reachability": "['ALLOCATOR', 'NOT (${ALLOCATOR} MATCHES \"tcmalloc(_minimal)?\")', '${ALLOCATOR} STREQUAL \"jemalloc\"'] OR ['NOT (ALLOCATOR)', 'ALLOCATOR', 'NOT gperftools_FOUND']",
        "code": [
            "find_package(JeMalloc)",
            "find_package(JeMalloc REQUIRED)"
        ]
    },
    {
        "name": "CURL",
        "type": "find_package",
        "reachability": "['NOT WIN32']",
        "code": [
            "find_package(CURL 7.32 REQUIRED)"
        ]
    },
    {
        "name": "OpenSSL",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(OpenSSL REQUIRED)"
        ]
    },
    {
        "name": "dpdk",
        "type": "pkg_check_modules",
        "reachability": "['PKG_CONFIG_FOUND'] OR ['WITH_DPDK'] OR ['WITH_SEASTAR', 'Seastar_DPDK']",
        "code": [
            "pkg_check_modules(dpdk QUIET libdpdk)",
            "find_package(dpdk)",
            "find_package(dpdk QUIET)"
        ]
    },
    {
        "name": "LTTngUST",
        "type": "find_package",
        "reachability": "['${WITH_LTTNG}'] OR ['WITH_BLKIN']",
        "code": [
            "find_package(LTTngUST REQUIRED)"
        ]
    },
    {
        "name": "EXPAT",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW']",
        "code": [
            "find_package(EXPAT REQUIRED)"
        ]
    },
    {
        "name": "OATH",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW']",
        "code": [
            "find_package(OATH REQUIRED)"
        ]
    },
    {
        "name": "Python3",
        "type": "find_package",
        "reachability": "['NOT WIN32'] OR ['WITH_CEPHFS', 'WITH_CEPHFS_SHELL'] OR ['NOT (WITH_SYSTEM_BOOST)', '', 'with_python_version'] OR ['WITH_CEPHFS', 'WITH_CEPHFS_TOP']",
        "code": [
            "find_package(Python3 ${WITH_PYTHON3} EXACT REQUIRED COMPONENTS Interpreter Development)",
            "find_package(Python3 ${with_python_version} QUIET REQUIRED COMPONENTS Development)",
            "find_package(Python3 ${MINIMUM_COMPATIBLE_VERSION} REQUIRED COMPONENTS Interpreter)",
            "find_package(Python3 ${WITH_PYTHON3} EXACT QUIET REQUIRED COMPONENTS Interpreter)"
        ]
    },
    {
        "name": "ZLIB",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(ZLIB REQUIRED)"
        ]
    },
    {
        "name": "babeltrace",
        "type": "find_package",
        "reachability": "['WITH_BABELTRACE']",
        "code": [
            "find_package(babeltrace REQUIRED)"
        ]
    },
    {
        "name": "Sanitizers",
        "type": "find_package",
        "reachability": "['sanitizers']",
        "code": [
            "find_package(Sanitizers REQUIRED ${sanitizers})"
        ]
    },
    {
        "name": "RocksDB",
        "type": "find_package",
        "reachability": "['WITH_SYSTEM_ROCKSDB']",
        "code": [
            "find_package(RocksDB 5.14 REQUIRED)"
        ]
    },
    {
        "name": "Boost",
        "type": "find_package",
        "reachability": "['WITH_SYSTEM_BOOST'] OR ['NOT Boost_NO_BOOST_CMAKE']",
        "code": [
            "find_package(Boost 1.85 COMPONENTS ${BOOST_COMPONENTS} REQUIRED)",
            "find_package(Boost QUIET NO_MODULE ${_boost_FIND_PACKAGE_ARGS})"
        ]
    },
    {
        "name": "StdFilesystem",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(StdFilesystem REQUIRED)"
        ]
    },
    {
        "name": "NUMA",
        "type": "find_package",
        "reachability": "['WITH_SPDK', 'NOT TARGET dpdk-ext'] OR ['WITH_SEASTAR', 'Seastar_DPDK', 'NOT DPDK_FOUND'] OR ['WITH_DPDK', 'NOT DPDK_FOUND']",
        "code": [
            "find_package(NUMA QUIET)"
        ]
    },
    {
        "name": "thrift",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_SELECT_PARQUET OR WITH_RADOSGW_ARROW_FLIGHT', 'NOT (WITH_SYSTEM_ARROW)', ''] OR ['WITH_JAEGER']",
        "code": [
            "find_package(thrift 0.13 REQUIRED)",
            "find_package(thrift 0.13.0 REQUIRED)"
        ]
    },
    {
        "name": "fmt",
        "type": "find_package",
        "reachability": "['WITH_SYSTEM_FMT']",
        "code": [
            "find_package(fmt 8.1.1...<10.0.0 REQUIRED)"
        ]
    },
    {
        "name": "c-ares",
        "type": "find_package",
        "reachability": "['WITH_SEASTAR'] OR ['WITH_RADOSGW', 'WITH_RADOSGW_SELECT_PARQUET OR WITH_RADOSGW_ARROW_FLIGHT', 'NOT (WITH_SYSTEM_ARROW)', '', 'WITH_RADOSGW_ARROW_FLIGHT']",
        "code": [
            "find_package(c-ares 1.13.0 QUIET)",
            "find_package(c-ares 1.13.0 QUIET REQUIRED)"
        ]
    },
    {
        "name": "pmdk",
        "type": "find_package",
        "reachability": "['WITH_BLUESTORE_PMEM OR WITH_RBD_RWL', 'WITH_SYSTEM_PMDK']",
        "code": [
            "find_package(pmdk 1.8 REQUIRED COMPONENTS ${pmdk_COMPONENTS})"
        ]
    },
    {
        "name": "ndctl",
        "type": "find_package",
        "reachability": "['WITH_BLUESTORE_PMEM OR WITH_RBD_RWL', 'NOT (WITH_SYSTEM_PMDK)', '', 'WITH_BLUESTORE_PMEM']",
        "code": [
            "find_package(ndctl 63 REQUIRED)"
        ]
    },
    {
        "name": "daxctl",
        "type": "find_package",
        "reachability": "['WITH_BLUESTORE_PMEM OR WITH_RBD_RWL', 'NOT (WITH_SYSTEM_PMDK)', '', 'WITH_BLUESTORE_PMEM']",
        "code": [
            "find_package(daxctl 63 REQUIRED)"
        ]
    },
    {
        "name": "Lua",
        "type": "find_package",
        "reachability": "['WITH_CEPHFS OR WITH_RADOSGW']",
        "code": [
            "find_package(Lua 5.3 REQUIRED)"
        ]
    },
    {
        "name": "GTest",
        "type": "find_package",
        "reachability": "['WITH_TESTS', 'WITH_SYSTEM_GTEST']",
        "code": [
            "find_package(GTest REQUIRED)"
        ]
    },
    {
        "name": "GMock",
        "type": "find_package",
        "reachability": "['WITH_TESTS', 'WITH_SYSTEM_GTEST']",
        "code": [
            "find_package(GMock REQUIRED)"
        ]
    },
    {
        "name": "Protobuf",
        "type": "find_package",
        "reachability": "['WITH_NVMEOF_GATEWAY_MONITOR_CLIENT'] OR ['WITH_RADOSGW', 'WITH_RADOSGW_SELECT_PARQUET OR WITH_RADOSGW_ARROW_FLIGHT', 'NOT (WITH_SYSTEM_ARROW)', '', 'WITH_RADOSGW_ARROW_FLIGHT']",
        "code": [
            "find_package(Protobuf REQUIRED)"
        ]
    },
    {
        "name": "gRPC",
        "type": "find_package",
        "reachability": "['WITH_NVMEOF_GATEWAY_MONITOR_CLIENT'] OR ['WITH_RADOSGW', 'WITH_RADOSGW_SELECT_PARQUET OR WITH_RADOSGW_ARROW_FLIGHT', 'NOT (WITH_SYSTEM_ARROW)', '', 'WITH_RADOSGW_ARROW_FLIGHT']",
        "code": [
            "find_package(gRPC CONFIG REQUIRED)",
            "find_package(gRPC REQUIRED)"
        ]
    },
    {
        "name": "Arrow",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Arrow CONFIG)",
            "find_package(Arrow 4 REQUIRED QUIET)",
            "find_package(Arrow ${find_package_arguments})"
        ]
    },
    {
        "name": "Parquet",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_SELECT_PARQUET OR WITH_RADOSGW_ARROW_FLIGHT', 'WITH_SYSTEM_ARROW'] OR ['ARROW_FOUND', 'NOT (PARQUET_HOME)', '', 'PARQUET_USE_CMAKE_PACKAGE_CONFIG']",
        "code": [
            "find_package(Parquet 4 REQUIRED QUIET)",
            "find_package(Parquet CONFIG)"
        ]
    },
    {
        "name": "utf8proc",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_SELECT_PARQUET OR WITH_RADOSGW_ARROW_FLIGHT', 'NOT (WITH_SYSTEM_ARROW)', '', 'WITH_SYSTEM_UTF8PROC']",
        "code": [
            "find_package(utf8proc 2.2.0 REQUIRED)"
        ]
    },
    {
        "name": "Doxygen",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Doxygen)"
        ]
    },
    {
        "name": "Git",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Git)",
            "find_package(Git QUIET)"
        ]
    },
    {
        "name": "Java",
        "type": "find_package",
        "reachability": "['WITH_CEPHFS_JAVA']",
        "code": [
            "find_package(Java COMPONENTS Development REQUIRED)"
        ]
    },
    {
        "name": "JNI",
        "type": "find_package",
        "reachability": "['WITH_CEPHFS_JAVA']",
        "code": [
            "find_package(JNI REQUIRED)"
        ]
    },
    {
        "name": "LinuxZNS",
        "type": "find_package",
        "reachability": "['WITH_SEASTAR', 'WITH_ZNS']",
        "code": [
            "find_package(LinuxZNS REQUIRED)"
        ]
    },
    {
        "name": "cap",
        "type": "find_package",
        "reachability": "['NOT WIN32']",
        "code": [
            "find_package(cap)"
        ]
    },
    {
        "name": "Cython",
        "type": "find_package",
        "reachability": "['NOT WIN32']",
        "code": [
            "find_package(Cython REQUIRED)"
        ]
    },
    {
        "name": "Zstd",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_SELECT_PARQUET OR WITH_RADOSGW_ARROW_FLIGHT', 'NOT (WITH_SYSTEM_ARROW)', '', 'WITH_SYSTEM_ZSTD'] OR ['WITH_SYSTEM_ZSTD']",
        "code": [
            "find_package(Zstd 1.4.4 REQUIRED)"
        ]
    },
    {
        "name": "Curses",
        "type": "find_package",
        "reachability": "['WITH_RBD']",
        "code": [
            "find_package(Curses)"
        ]
    },
    {
        "name": "nl",
        "type": "find_package",
        "reachability": "['WITH_RBD', 'LINUX']",
        "code": [
            "find_package(nl REQUIRED genl)"
        ]
    },
    {
        "name": "PkgConfig",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(PkgConfig REQUIRED)",
            "find_package(PkgConfig)",
            "find_package(PkgConfig QUIET)",
            "find_package(PkgConfig QUIET REQUIRED)"
        ]
    },
    {
        "name": "CAPNG",
        "type": "pkg_check_modules",
        "reachability": "['WITH_LIBCEPHFS', 'LINUX']",
        "code": [
            "pkg_check_modules(CAPNG REQUIRED libcap-ng)"
        ]
    },
    {
        "name": "ICU",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW']",
        "code": [
            "find_package(ICU 52.0 COMPONENTS uc REQUIRED)"
        ]
    },
    {
        "name": "LMDB",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_POSIX']",
        "code": [
            "find_package(LMDB REQUIRED)"
        ]
    },
    {
        "name": "motr",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_MOTR']",
        "code": [
            "find_package(motr REQUIRED)"
        ]
    },
    {
        "name": "DAOS",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_DAOS']",
        "code": [
            "find_package(DAOS REQUIRED)"
        ]
    },
    {
        "name": "RabbitMQ",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_AMQP_ENDPOINT']",
        "code": [
            "find_package(RabbitMQ REQUIRED)"
        ]
    },
    {
        "name": "RDKafka",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_KAFKA_ENDPOINT']",
        "code": [
            "find_package(RDKafka 0.9.2 REQUIRED)"
        ]
    },
    {
        "name": "gtest",
        "type": "find_package",
        "reachability": "['WITH_RADOSGW', 'WITH_RADOSGW_DBSTORE']",
        "code": [
            "find_package(gtest QUIET)"
        ]
    },
    {
        "name": [
            "ldap"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LDAP_LIBRARY ldap)"
        ]
    },
    {
        "name": [
            "lber"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LBER_LIBRARY lber)"
        ]
    },
    {
        "name": [
            "rocksdb"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(ROCKSDB_LIBRARIES rocksdb)"
        ]
    },
    {
        "name": [
            "babeltrace",
            "babeltrace-ctf"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(BABELTRACE_LIBRARY NAMES babeltrace babeltrace-ctf)"
        ]
    },
    {
        "name": [
            "gssapi_krb5"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(GSSAPI_KRB5_LIBRARY gssapi_krb5)"
        ]
    },
    {
        "name": [
            "\"${CMAKE_STATIC_LIBRARY_PREFIX}zstd.${CMAKE_STATIC_LIBRARY_SUFFIX}\"",
            "zstd"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(Zstd_LIBRARY NAMES \"${CMAKE_STATIC_LIBRARY_PREFIX}zstd.${CMAKE_STATIC_LIBRARY_SUFFIX}\" zstd HINTS ${Zstd_ROOT_DIR}/lib)"
        ]
    },
    {
        "name": [
            "rabbitmq"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(rabbitmq_LIBRARY NAMES rabbitmq)"
        ]
    },
    {
        "name": "PKG_${component}",
        "type": "pkg_check_modules",
        "reachability": "",
        "code": [
            "pkg_check_modules(PKG_${component} QUIET \"lib${component}\")"
        ]
    },
    {
        "name": [
            "UNKNOWN_NAME"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(_${_PYTHON_PREFIX}_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(utf8proc_LIB NAMES ${utf8proc_LIB_NAMES} PATH_SUFFIXES lib lib64)",
            "find_library(_${_PYTHON_PREFIX}_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR PATHS ${__${_PYTHON_PREFIX}_FRAMEWORK_PATHS} ${__${_PYTHON_PREFIX}_REGISTRY_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES})",
            "find_library(_${_PYTHON_PREFIX}_LIBRARY_DEBUG NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES_DEBUG} NAMES_PER_DIR NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR PATHS ${__${_PYTHON_PREFIX}_FRAMEWORK_PATHS} ${__${_PYTHON_PREFIX}_REGISTRY_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES})",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATHS ${_${_PYTHON_PREFIX}_VIRTUALENV_PATHS} ${_${_PYTHON_PREFIX}_REGISTRY_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATHS ${_${_PYTHON_PREFIX}_VIRTUALENV_PATHS} ${_${_PYTHON_PREFIX}_FRAMEWORK_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(FUSE_LIBRARIES NAMES ${fuse_names} HINTS ${PKG_FUSE_LIBDIR} NO_DEFAULT_PATH)",
            "find_library(utf8proc_LIB NAMES ${utf8proc_LIB_NAMES} PATHS ${utf8proc_ROOT} PATH_SUFFIXES lib lib64 NO_DEFAULT_PATH)",
            "find_library(GPERFTOOLS_${COMPONENT}_LIBRARY ${component} HINTS $ENV{GPERF_ROOT}/lib)",
            "find_library(${var} ${ARGN})",
            "find_library(FUSE_LIBRARIES NAMES ${fuse_names} PATHS /usr/local/lib64 /usr/local/lib)",
            "find_library(_${_PYTHON_PREFIX}_LIBRARY_DEBUG NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES_DEBUG} NAMES_PER_DIR HINTS \"${_${_PYTHON_PREFIX}_PATH}\" ${_${_PYTHON_PREFIX}_HINTS} NO_DEFAULT_PATH)",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_DEBUG NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES_DEBUG} NAMES_PER_DIR NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(_${_PYTHON_PREFIX}_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATHS ${_${_PYTHON_PREFIX}_VIRTUALENV_PATHS} ${_${_PYTHON_PREFIX}_REGISTRY_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} HINTS \"${_${_PYTHON_PREFIX}_PATH}\" ${_${_PYTHON_PREFIX}_HINTS} NO_DEFAULT_PATH)",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATHS ${_${_PYTHON_PREFIX}_VIRTUALENV_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(QatDrv_${component}_LIBRARIES NAMES ${component} HINTS ${QATDRV_INCLUDE_DIR}/build/)",
            "find_library(_${_PYTHON_PREFIX}_SABI_LIBRARY_DEBUG NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES_DEBUG} NAMES_PER_DIR HINTS \"${_${_PYTHON_PREFIX}_PATH}\" ${_${_PYTHON_PREFIX}_HINTS} NO_DEFAULT_PATH)",
            "find_library(${ARGV})",
            "find_library(_${_PYTHON_PREFIX}_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATHS ${_${_PYTHON_PREFIX}_VIRTUALENV_PATHS} ${_${_PYTHON_PREFIX}_FRAMEWORK_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_CMAKE_PATH NO_CMAKE_ENVIRONMENT_PATH NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)",
            "find_library(pmdk_${component}_LIBRARY NAMES ${component} HINTS ${PKG_${component}_LIBRARY_DIRS})",
            "find_library(_${_PYTHON_PREFIX}_LIBRARY_RELEASE NAMES ${_${_PYTHON_PREFIX}_LIB_NAMES} NAMES_PER_DIR HINTS ${_${_PYTHON_PREFIX}_HINTS} PATHS ${_${_PYTHON_PREFIX}_VIRTUALENV_PATHS} PATH_SUFFIXES ${_${_PYTHON_PREFIX}_PATH_SUFFIXES} NO_SYSTEM_ENVIRONMENT_PATH NO_CMAKE_SYSTEM_PATH)"
        ]
    },
    {
        "name": [
            "uuid"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(UUID_LIBRARIES NAMES uuid)"
        ]
    },
    {
        "name": [
            "qat"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(QAT_LIBRARY NAMES qat HINTS ${PC_QAT_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "usdm"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(QAT_USDM_LIBRARY NAMES usdm HINTS ${PC_QAT_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "motr"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(motr_LIBRARY NAMES motr HINTS ${PC_motr_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "motr-helpers"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(motr_helpers_LIBRARY NAMES motr-helpers HINTS ${PC_motr_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "libcryptsetup.so"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LIBCRYPTSETUP_LIBRARIES NAMES libcryptsetup.so PATHS ${PC_libcryptsetup_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "\"${shared_lib_name}\""
        ],
        "type": "find_library",
        "reachability": "['home']",
        "code": [
            "find_library(${prefix}_shared_lib NAMES \"${shared_lib_name}\" PATHS \"${home}\" PATH_SUFFIXES ${ARROW_SEARCH_LIB_PATH_SUFFIXES} NO_DEFAULT_PATH)"
        ]
    },
    {
        "name": [
            "\"${import_lib_name}\""
        ],
        "type": "find_library",
        "reachability": "['home', 'shared_lib']",
        "code": [
            "find_library(${prefix}_import_lib NAMES \"${import_lib_name}\" PATHS \"${home}\" PATH_SUFFIXES ${ARROW_SEARCH_LIB_PATH_SUFFIXES} NO_DEFAULT_PATH)"
        ]
    },
    {
        "name": [
            "\"${static_lib_name}\""
        ],
        "type": "find_library",
        "reachability": "['NOT (home)', '', 'NOT (${cmake_package_name}_FOUND)', '', '${prefix}_PC_FOUND'] OR ['home']",
        "code": [
            "find_library(${prefix}_static_lib NAMES \"${static_lib_name}\" PATHS \"${lib_dir}\" NO_DEFAULT_PATH)",
            "find_library(${prefix}_static_lib NAMES \"${static_lib_name}\" PATHS \"${home}\" PATH_SUFFIXES ${ARROW_SEARCH_LIB_PATH_SUFFIXES} NO_DEFAULT_PATH)"
        ]
    },
    {
        "name": "${cmake_package_name}",
        "type": "find_package",
        "reachability": "['NOT (home)', '']",
        "code": [
            "find_package(${cmake_package_name} CONFIG)"
        ]
    },
    {
        "name": "${prefix}_PC",
        "type": "pkg_check_modules",
        "reachability": "['NOT (home)', '', 'NOT (${cmake_package_name}_FOUND)', '']",
        "code": [
            "pkg_check_modules(${prefix}_PC ${pkg_config_name})"
        ]
    },
    {
        "name": [
            "blkid"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(BLKID_LIBRARIES blkid)"
        ]
    },
    {
        "name": [
            "thrift",
            "libthrift"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(thrift_LIBRARIES NAMES thrift libthrift HINTS ${thrift_HOME} ENV thrift_HOME /usr/local /opt/local PATH_SUFFIXES lib lib64)"
        ]
    },
    {
        "name": [
            "udev"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(UDEV_LIBRARIES udev)"
        ]
    },
    {
        "name": [
            "rte_${c}"
        ],
        "type": "find_library",
        "reachability": "['NOT (TARGET ${dpdk_lib})', '']",
        "code": [
            "find_library(DPDK_rte_${c}_LIBRARY rte_${c} HINTS ENV DPDK_DIR ${dpdk_LIBRARY_DIRS} PATH_SUFFIXES lib)"
        ]
    },
    {
        "name": [
            "HINTS"
        ],
        "type": "find_library",
        "reachability": "['Boost_USE_DEBUG_LIBS', 'NOT (${var})', '_Boost_FIND_LIBRARY_HINTS_FOR_COMPONENT'] OR ['Boost_USE_RELEASE_LIBS', 'NOT (${var})', '_Boost_FIND_LIBRARY_HINTS_FOR_COMPONENT']",
        "code": [
            "find_library(${var} HINTS ${_Boost_FIND_LIBRARY_HINTS_FOR_COMPONENT} ${ARGN})"
        ]
    },
    {
        "name": [
            "numa"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(NUMA_LIBRARIES numa)"
        ]
    },
    {
        "name": [
            "daos"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(DAOS_LIBRARY NAMES daos HINTS ${PC_DAOS_LIBDIR} ${PC_DAOS_LIBRARY_DIRS} PATHS /usr/local/lib64 /usr/local/lib /usr/lib64 /usr/lib)"
        ]
    },
    {
        "name": [
            "dfs"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(DAOS_FS_LIBRARY NAMES dfs HINTS ${PC_DAOS_LIBDIR} ${PC_DAOS_LIBRARY_DIRS} PATHS /usr/local/lib64 /usr/local/lib /usr/lib64 /usr/lib)"
        ]
    },
    {
        "name": [
            "ds3"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(DAOS_FS_LIBRARY NAMES ds3 HINTS ${PC_DAOS_LIBDIR} ${PC_DAOS_LIBRARY_DIRS} PATHS /usr/local/lib64 /usr/local/lib /usr/lib64 /usr/lib)"
        ]
    },
    {
        "name": [
            "duns"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(DAOS_UNS_LIBRARY NAMES duns HINTS ${PC_DAOS_LIBDIR} ${PC_DAOS_LIBRARY_DIRS} PATHS /usr/local/lib64 /usr/local/lib /usr/lib64 /usr/lib)"
        ]
    },
    {
        "name": [
            "daxctl"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(daxctl_LIBRARY daxctl)"
        ]
    },
    {
        "name": [
            "dml",
            "libdml"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(DML_LIBRARIES NAMES dml libdml PATHS /usr/local/ /usr/local/lib64 /usr/lib64 /usr/lib)"
        ]
    },
    {
        "name": [
            "dmlhl",
            "libdmlhl"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(DML_HL_LIBRARIES NAMES dmlhl libdmlhl PATHS /usr/local/ /usr/local/lib64 /usr/lib64 /usr/lib)"
        ]
    },
    {
        "name": [
            "ndctl"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(ndctl_LIBRARY ndctl)"
        ]
    },
    {
        "name": [
            "handle"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LIBXFS NAMES handle)"
        ]
    },
    {
        "name": [
            "rdmacm"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(RDMACM_LIBRARIES rdmacm)"
        ]
    },
    {
        "name": [
            "cares"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(c-ares_LIBRARY NAMES cares PATHS ${PC_cares_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "jemalloc"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(JEMALLOC_LIBRARIES jemalloc)"
        ]
    },
    {
        "name": [
            "libasan.so.10",
            "libasan.so.9",
            "libasan.so.8",
            "libasan.so.7",
            "libasan.so.6",
            "libasan.so.5",
            "libasan.so.4",
            "libasan.so.3"
        ],
        "type": "find_library",
        "reachability": "['Sanitizers_address_COMPILE_OPTIONS OR Sanitizers_leak_COMPILE_OPTIONS']",
        "code": [
            "find_library(ASAN_LIBRARY NAMES libasan.so.10 libasan.so.9 libasan.so.8 libasan.so.7 libasan.so.6 libasan.so.5 libasan.so.4 libasan.so.3)"
        ]
    },
    {
        "name": [
            "rdkafka"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(rdkafka_LIBRARY NAMES rdkafka PATHS ${PC_rdkafka_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "liblmdb.dll.a"
        ],
        "type": "find_library",
        "reachability": "['STATIC', 'MINGW']",
        "code": [
            "find_library(LMDB_LIBRARIES liblmdb.dll.a)"
        ]
    },
    {
        "name": [
            "liblmdb.a"
        ],
        "type": "find_library",
        "reachability": "['STATIC', 'NOT (MINGW)', '']",
        "code": [
            "find_library(LMDB_LIBRARIES liblmdb.a)"
        ]
    },
    {
        "name": [
            "lmdb"
        ],
        "type": "find_library",
        "reachability": "['NOT (STATIC)', '']",
        "code": [
            "find_library(LMDB_LIBRARIES lmdb)"
        ]
    },
    {
        "name": [
            "uring"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(URING_LIBRARIES uring)"
        ]
    },
    {
        "name": [
            "aio"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(AIO_LIBRARIES aio HINTS $ENV{AIO_ROOT}/lib)"
        ]
    },
    {
        "name": [
            "qatzip"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(QATzip_LIBRARIES NAMES qatzip HINTS ${PC_QATzip_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "sqlite3",
            "sqlite"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(SQLite3_LIBRARY NAMES sqlite3 sqlite)"
        ]
    },
    {
        "name": [
            "snappy"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(SNAPPY_LIBRARIES NAMES snappy HINTS ${PC_snappy_LIBRARY_DIRS} ${SNAPPY_ROOT_DIR}/lib)"
        ]
    },
    {
        "name": [
            "ibverbs"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(VERBS_LIBRARIES ibverbs)"
        ]
    },
    {
        "name": [
            "gmock"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(GMock_GMock_LIBRARY NAMES gmock)"
        ]
    },
    {
        "name": [
            "gmock_main"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(GMock_Main_LIBRARY NAMES gmock_main)"
        ]
    },
    {
        "name": [
            "oath",
            "liboath"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(OATH_LIBRARY NAMES oath liboath PATHS /usr/local/lib /usr/lib)"
        ]
    },
    {
        "name": [
            "zbd"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(ZBD_LIBRARIES zbd HINTS $ENV{ZBD_ROOT}/lib)"
        ]
    },
    {
        "name": [
            "lttng-ust"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LTTNGUST_LIBRARIES NAMES lttng-ust)"
        ]
    },
    {
        "name": "PC_cap",
        "type": "pkg_check_modules",
        "reachability": "",
        "code": [
            "pkg_check_modules(PC_cap QUIET cap)"
        ]
    },
    {
        "name": [
            "cap"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(cap_LIBRARY NAMES cap HINTS ${PC_cap_LIBDIR} ${PC_cap_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "nl-3"
        ],
        "type": "find_library",
        "reachability": "['component STREQUAL \"core\"']",
        "code": [
            "find_library(nl_${component}_LIBRARY nl-3)"
        ]
    },
    {
        "name": [
            "nl-${component}-3"
        ],
        "type": "find_library",
        "reachability": "['NOT (component STREQUAL \"core\")', '']",
        "code": [
            "find_library(nl_${component}_LIBRARY nl-${component}-3)"
        ]
    },
    {
        "name": [
            "yaml-cpp"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(yaml-cpp_LIBRARY NAMES yaml-cpp HINTS ${yaml-cpp_PC_LIBDIR} ${yaml-cpp_PC_LIBRARY_DIRS})"
        ]
    },
    {
        "name": [
            "lz4"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LZ4_LIBRARY NAMES lz4)"
        ]
    },
    {
        "name": [
            "keyutils"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(KEYUTILS_LIBRARIES NAMES keyutils)"
        ]
    },
    {
        "name": [
            "cunit",
            "libcunit",
            "cunitlib"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(CUNIT_LIBRARY NAMES cunit libcunit cunitlib)"
        ]
    },
    {
        "name": [
            "\"execinfo\""
        ],
        "type": "find_library",
        "reachability": "['NOT (_Backtrace_SYM_FOUND)', '', 'Backtrace_INCLUDE_DIR']",
        "code": [
            "find_library(Backtrace_LIBRARY \"execinfo\")"
        ]
    },
    {
        "name": [
            "\"backtrace\""
        ],
        "type": "find_library",
        "reachability": "['NOT (_Backtrace_SYM_FOUND)', '', 'NOT (Backtrace_INCLUDE_DIR)', '']",
        "code": [
            "find_library(Backtrace_LIBRARY \"backtrace\")"
        ]
    }
]