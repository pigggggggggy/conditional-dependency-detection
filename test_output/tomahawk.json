[
    {
        "name": "ECM",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(ECM 1.7.0 REQUIRED NO_MODULE)"
        ]
    },
    {
        "name": "Qt5Core",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Core REQUIRED)"
        ]
    },
    {
        "name": "Qt5Concurrent",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Concurrent REQUIRED)"
        ]
    },
    {
        "name": "Qt5Gui",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Gui REQUIRED)"
        ]
    },
    {
        "name": "Qt5Network",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Network REQUIRED)"
        ]
    },
    {
        "name": "Qt5Sql",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Sql REQUIRED)"
        ]
    },
    {
        "name": "Qt5Svg",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Svg REQUIRED)"
        ]
    },
    {
        "name": "Qt5UiTools",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5UiTools REQUIRED)"
        ]
    },
    {
        "name": "Qt5WebKitWidgets",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5WebKitWidgets REQUIRED)"
        ]
    },
    {
        "name": "Qt5Widgets",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Widgets REQUIRED)"
        ]
    },
    {
        "name": "Qt5Xml",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5Xml REQUIRED)"
        ]
    },
    {
        "name": "Qt5X11Extras",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5X11Extras NO_MODULE QUIET)"
        ]
    },
    {
        "name": "Qt5DBus",
        "type": "find_package",
        "reachability": "['UNIX AND NOT APPLE']",
        "code": [
            "find_package(Qt5DBus REQUIRED)"
        ]
    },
    {
        "name": "Qt5MacExtras",
        "type": "find_package",
        "reachability": "['APPLE']",
        "code": [
            "find_package(Qt5MacExtras REQUIRED)"
        ]
    },
    {
        "name": "Qt5WinExtras",
        "type": "find_package",
        "reachability": "['WIN32']",
        "code": [
            "find_package(Qt5WinExtras REQUIRED)"
        ]
    },
    {
        "name": "Qt5LinguistTools",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Qt5LinguistTools REQUIRED)"
        ]
    },
    {
        "name": "Boost",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Boost REQUIRED COMPONENTS filesystem system)"
        ]
    },
    {
        "name": "${_name}",
        "type": "find_package",
        "reachability": "['WIN32 OR APPLE', 'WITH_${_name}'] OR ['UNIX AND NOT APPLE', 'WITH_${_name}'] OR ['WITH_${_name}'] OR ['WIN32', 'WITH_${_name}'] OR ['NOT APPLE', 'WITH_${_name}']",
        "code": [
            "find_package(${_name} ${ARGN})"
        ]
    },
    {
        "name": "Taglib",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(Taglib 1.8.0 REQUIRED)"
        ]
    },
    {
        "name": "LIBVLC",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(LIBVLC REQUIRED 2.1.0)"
        ]
    },
    {
        "name": "Qt5Test",
        "type": "find_package",
        "reachability": "['BUILD_TESTS']",
        "code": [
            "find_package(Qt5Test REQUIRED)"
        ]
    },
    {
        "name": [
            "CoreAudio"
        ],
        "type": "find_library",
        "reachability": "['APPLE']",
        "code": [
            "FIND_LIBRARY(COREAUDIO_LIBRARY CoreAudio)"
        ]
    },
    {
        "name": [
            "CoreFoundation"
        ],
        "type": "find_library",
        "reachability": "['APPLE']",
        "code": [
            "FIND_LIBRARY(COREFOUNDATION_LIBRARY CoreFoundation)"
        ]
    },
    {
        "name": [
            "Foundation"
        ],
        "type": "find_library",
        "reachability": "['APPLE']",
        "code": [
            "FIND_LIBRARY(FOUNDATION_LIBRARY Foundation)"
        ]
    },
    {
        "name": [
            "ScriptingBridge"
        ],
        "type": "find_library",
        "reachability": "['APPLE']",
        "code": [
            "FIND_LIBRARY(SCRIPTINGBRIDGE_LIBRARY ScriptingBridge)"
        ]
    },
    {
        "name": "Tomahawk",
        "type": "find_package",
        "reachability": "['IS_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIRECTORY}\" AND EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIRECTORY}/CMakeLists.txt\"', 'NOT (SUBDIRECTORY STREQUAL \"xmpp\") OR (SUBDIRECTORY STREQUAL \"google\")', 'SUBDIRECTORY STREQUAL \"hatchet\"', 'BUILD_HATCHET AND BUILD_GUI', 'NOT TOMAHAWK_LIBRARIES']",
        "code": [
            "find_package(Tomahawk REQUIRED)"
        ]
    },
    {
        "name": "OpenSSL",
        "type": "find_package",
        "reachability": "['IS_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIRECTORY}\" AND EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIRECTORY}/CMakeLists.txt\"', 'NOT (SUBDIRECTORY STREQUAL \"xmpp\") OR (SUBDIRECTORY STREQUAL \"google\")', 'SUBDIRECTORY STREQUAL \"hatchet\"', 'BUILD_HATCHET AND BUILD_GUI']",
        "code": [
            "find_package(OpenSSL REQUIRED)"
        ]
    },
    {
        "name": "websocketpp",
        "type": "find_package",
        "reachability": "['IS_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIRECTORY}\" AND EXISTS \"${CMAKE_CURRENT_SOURCE_DIR}/${SUBDIRECTORY}/CMakeLists.txt\"', 'NOT (SUBDIRECTORY STREQUAL \"xmpp\") OR (SUBDIRECTORY STREQUAL \"google\")', 'SUBDIRECTORY STREQUAL \"hatchet\"', 'BUILD_HATCHET AND BUILD_GUI']",
        "code": [
            "find_package(websocketpp 0.2.99 REQUIRED)"
        ]
    },
    {
        "name": [
            "Sparkle"
        ],
        "type": "find_library",
        "reachability": "['UNIX', 'APPLE', 'APPLE']",
        "code": [
            "find_library(SPARKLE Sparkle)"
        ]
    },
    {
        "name": [
            "UNKNOWN_NAME"
        ],
        "type": "find_library",
        "reachability": "['NOT (QCA2_INCLUDE_DIR AND QCA2_LIBRARIES)', 'QCA2_INCLUDE_DIR AND QCA2_LIBRARIES', 'NOT (NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\")', 'NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\"', 'NOT WIN32'] OR ['NOT (QCA2_INCLUDE_DIR AND QCA2_LIBRARIES)', 'QCA2_INCLUDE_DIR AND QCA2_LIBRARIES', 'NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\"'] OR ['NOT (NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\")', 'NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\"', 'NOT (NOT WIN32)', 'NOT WIN32'] OR ['NOT (NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\")', 'NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\"', 'NOT WIN32'] OR ['NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\"'] OR ['NOT (QCA2_INCLUDE_DIR AND QCA2_LIBRARIES)', 'QCA2_INCLUDE_DIR AND QCA2_LIBRARIES', 'NOT (NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\")', 'NOT \"${win32_dbg_postfix_name}\" STREQUAL \"WIN32_DEBUG_POSTFIX\"', 'NOT (NOT WIN32)', 'NOT WIN32']",
        "code": [
            "FIND_LIBRARY(${var_name}_DEBUG NAMES ${libnames_debug} ${newargs})",
            "FIND_LIBRARY(${var_name} ${win32_dbg_postfix_name} ${dgb_postfix} ${libname} ${ARGN})",
            "FIND_LIBRARY(${var_name} ${libname} ${ARGN})",
            "FIND_LIBRARY(${var_name}_RELEASE NAMES ${libnames_release} ${newargs})"
        ]
    },
    {
        "name": "PkgConfig",
        "type": "find_package",
        "reachability": "",
        "code": [
            "FIND_PACKAGE(PkgConfig QUIET)",
            "find_package(PkgConfig)",
            "find_package(PkgConfig QUIET)",
            "FIND_PACKAGE(PkgConfig)"
        ]
    },
    {
        "name": "PC_SPARSEHASH",
        "type": "pkg_check_modules",
        "reachability": "",
        "code": [
            "PKG_CHECK_MODULES(PC_SPARSEHASH QUIET libsparsehash)"
        ]
    },
    {
        "name": [
            "tag"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(Taglib_LIBRARIES NAMES tag HINTS ${PC_TAGLIB_LIBDIR})"
        ]
    },
    {
        "name": "TelepathyQt5",
        "type": "find_package",
        "reachability": "",
        "code": [
            "find_package(TelepathyQt5 NO_MODULE)"
        ]
    },
    {
        "name": [
            "libquazip5.dll"
        ],
        "type": "find_library",
        "reachability": "['NOT (QUAZIP_INCLUDE_DIRS AND QUAZIP_LIBRARIES)', 'QUAZIP_INCLUDE_DIRS AND QUAZIP_LIBRARIES', 'WIN32']",
        "code": [
            "FIND_LIBRARY(QUAZIP_LIBRARIES NAMES libquazip5.dll HINTS ${QUAZIP_LIBRARY_DIR})"
        ]
    },
    {
        "name": "PC_QUAZIP",
        "type": "pkg_check_modules",
        "reachability": "['NOT (QUAZIP_INCLUDE_DIRS AND QUAZIP_LIBRARIES)', 'QUAZIP_INCLUDE_DIRS AND QUAZIP_LIBRARIES', 'NOT (WIN32)', 'WIN32']",
        "code": [
            "pkg_check_modules(PC_QUAZIP quazip)"
        ]
    },
    {
        "name": [
            "quazip5"
        ],
        "type": "find_library",
        "reachability": "['NOT (QUAZIP_INCLUDE_DIRS AND QUAZIP_LIBRARIES)', 'QUAZIP_INCLUDE_DIRS AND QUAZIP_LIBRARIES', 'NOT (WIN32)', 'WIN32']",
        "code": [
            "FIND_LIBRARY(QUAZIP_LIBRARIES WIN32_DEBUG_POSTFIX d NAMES quazip5 HINTS /usr/lib /usr/lib64)"
        ]
    },
    {
        "name": [
            "lastfm5"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LIBLASTFM_LIBRARY NAMES lastfm5)"
        ]
    },
    {
        "name": [
            "qtsparkle-qt5"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "FIND_LIBRARY(QTSPARKLE_LIBRARIES NAMES qtsparkle-qt5 HINTS ${CMAKE_INSTALL_LIBDIR})"
        ]
    },
    {
        "name": "PC_JREEN",
        "type": "pkg_check_modules",
        "reachability": "",
        "code": [
            "PKG_CHECK_MODULES(PC_JREEN QUIET libjreen-qt5)"
        ]
    },
    {
        "name": [
            "jreen-qt5"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "FIND_LIBRARY(JREEN_LIBRARIES NAMES jreen-qt5 HINTS ${PC_JREEN_LIBDIR} ${PC_JREEN_LIBRARY_DIRS} ${CMAKE_INSTALL_LIBDIR})"
        ]
    },
    {
        "name": "PC_QCA2",
        "type": "pkg_check_modules",
        "reachability": "['NOT (QCA2_INCLUDE_DIR AND QCA2_LIBRARIES)', 'QCA2_INCLUDE_DIR AND QCA2_LIBRARIES', 'NOT WIN32']",
        "code": [
            "pkg_check_modules(PC_QCA2 qca2)"
        ]
    },
    {
        "name": "PC_LIBATTICA",
        "type": "pkg_check_modules",
        "reachability": "['NOT WIN32']",
        "code": [
            "PKG_CHECK_MODULES(PC_LIBATTICA QUIET libattica)"
        ]
    },
    {
        "name": [
            "attica",
            "libattica"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "FIND_LIBRARY(LIBATTICA_LIBRARIES NAMES attica libattica HINTS ${PC_LIBATTICA_LIBDIR} ${PC_LIBATTICA_LIBRARY_DIRS})"
        ]
    },
    {
        "name": "PC_LIBVLC",
        "type": "pkg_check_modules",
        "reachability": "",
        "code": [
            "pkg_check_modules(PC_LIBVLC QUIET libvlc)"
        ]
    },
    {
        "name": [
            "vlc",
            "libvlc"
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(LIBVLC_LIBRARY NAMES vlc libvlc HINTS ${PC_LIBVLC_LIBDIR} ${PC_LIBVLC_LIBRARY_DIRS} /usr/local/opt/vlc/lib)"
        ]
    },
    {
        "name": [
            "\"tomahawklib\""
        ],
        "type": "find_library",
        "reachability": "",
        "code": [
            "find_library(TOMAHAWK_LIBRARY \"tomahawklib\" PATHS \"${Tomahawk_CMAKE_DIR}/../../../lib/\" \"${Tomahawk_CMAKE_DIR}/../../../lib64/\")"
        ]
    },
    {
        "name": [
            "ws2_32",
            "WS2_32",
            "Ws2_32"
        ],
        "type": "find_library",
        "reachability": "['WIN32']",
        "code": [
            "find_library(WINSOCK2_LIBRARY NAMES ws2_32 WS2_32 Ws2_32)"
        ]
    },
    {
        "name": [
            "iphlpapi"
        ],
        "type": "find_library",
        "reachability": "['WIN32']",
        "code": [
            "find_library(IPHLPAPI_LIBRARY NAMES iphlpapi)"
        ]
    }
]